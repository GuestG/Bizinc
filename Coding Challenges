1: Coding Challenge: Array Manipulation
function doubleEvens(arr) {
  return arr.map(num => {
    // Check if the number is even
    if (num % 2 === 0) {
      return num * 2; // Double the even number
    } else {
      return num; // Leave the odd number unchanged
    }
  });
}



2: Coding Challenge: Simple Counter Component
import React, { useState } from 'react';

function Counter() {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount(count + 1);
  };

  const decrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <h1>Counter: {count}</h1>
      <button onClick={increment}>Increment</button>
      <button onClick={decrement}>Decrement</button>
    </div>
  );
}

export default Counter;



3: Coding Challenge: Basic API Endpoint
const express = require('express');
const app = express();
const port = 3000;

// Define the /message endpoint
app.get('/message', (req, res) => {
  res.json({ message: "Hello, World!" });
});

// Start the server
app.listen(port, () => {
  console.log(`Server is running on http://localhost:${port}`);
});

(use tool like postman to see message)



4: Coding Challenge: Static Page
//This is after inserting an items.js file

import fs from 'fs';
import path from 'path';

const dataFilePath = path.join(process.cwd(), 'public', 'data', 'items.json');

export async function getStaticProps() {
  // Read the JSON file
  const fileContents = fs.readFileSync(dataFilePath, 'utf8');
  const items = JSON.parse(fileContents);

  return {
    props: {
      items
    }
  };
}

export default function ItemsPage({ items }) {
  return (
    <div>
      <h1>List of Items</h1>
      <ul>
        {items.map(item => (
          <li key={item.id}>{item.name}</li>
        ))}
      </ul>
    </div>
  );
}


5: Coding Challenge: Basic SQL Queries
//to make the table
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE
);

//insert a sample user
INSERT INTO users (name, email)
VALUES ('John Doe', 'john.doe@example.com');

// get all users
INSERT INTO users (name, email)
VALUES ('John Doe', 'john.doe@example.com');



7: Coding Challenge: Basic Custom Plugin
<?php
/*
Plugin Name: Greeting Shortcode
Description: Adds a shortcode [greeting] that outputs "Welcome to My Site!".
Version: 1.0
Author: Your Name
*/

function greeting_shortcode() {
    return "Welcome to My Site!";
}

// Register the shortcode with WordPress
function register_greeting_shortcode() {
    add_shortcode('greeting', 'greeting_shortcode');
}

// Hook the shortcode registration function to the 'init' action
add_action('init', 'register_greeting_shortcode');



